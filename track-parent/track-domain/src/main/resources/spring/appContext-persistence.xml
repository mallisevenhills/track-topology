<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <tx:annotation-driven />

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="@{database.driverClassName}" />
		<property name="jdbcUrl" value="@{database.url}" />
		<property name="user" value="@{database.username}" />
		<property name="password" value="@{database.password}" />

		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="track" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="@{database.platform}" />
				<property name="generateDdl" value="@{database.generateDdl}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- spring 3.1 nested beans plus env abstraction below -->

	<!-- development profile -->
	<beans profile="verbose">

		<!-- indirection to allow wrapping -->
		<bean id="dataSourceSpied" class="com.libsoninc.groceryserver.util.RoutingDataSource">
			<property name="targetDataSources">
				<map key-type="com.libsoninc.groceryserver.util.DataSourceRoutingType">
					<entry key="SLAVE" value-ref="slaveDataSource" />
					<entry key="AUDIT" value-ref="auditDataSource" />
				</map>
			</property>
			<property name="defaultTargetDataSource" ref="masterDataSource" />
		</bean>

		<!-- proxied datasource, yields proxy connections, etc -->
		<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
			<constructor-arg ref="dataSourceSpied" />
			<property name="logFormatter" ref="spyLog"/>
		</bean>

		<bean id="spyLog" class="com.groceryserver.services.util.SpyLog" />
	</beans>

	<!-- production profile -->
	<beans profile="silent">

		<!-- normal datasource -->
		<bean id="dataSource" class="com.libsoninc.groceryserver.util.RoutingDataSource">
			<property name="targetDataSources">
				<map key-type="com.libsoninc.groceryserver.util.DataSourceRoutingType">
					<entry key="SLAVE" value-ref="slaveDataSource" />
					<entry key="AUDIT" value-ref="auditDataSource" />
				</map>
			</property>
			<property name="defaultTargetDataSource" ref="masterDataSource" />
		</bean>
	</beans>

</beans>
